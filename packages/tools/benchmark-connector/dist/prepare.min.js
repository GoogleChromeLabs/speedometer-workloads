const fs=require("fs").promises,{resolve:resolve}=require("path");async function deleteFile(e){try{await fs.unlink(e),console.log(`File ${e} has been deleted.`)}catch(e){console.error("No previous file exists, no need to delete!")}}async function copyAndUpdate({meta:e,src:n,dest:o}){let s=await fs.readFile(`${n}`,"utf8");if(e){const n=await fs.readFile(resolve(e)),{name:o,version:a}=JSON.parse(n);s=`window.name = "${o}"; window.version = "${a}"; ${s}`}await fs.writeFile(`${o}`,s)}async function prepare(){const e=process.env.HOST??"public";await deleteFile(`${e}/benchmark-connector.min.js`),await copyAndUpdate({meta:"./package.json",src:"node_modules/benchmark-connector/dist/benchmark-connector.min.js",dest:`${e}/benchmark-connector.min.js`}),console.log("Done with preparation!")}prepare();